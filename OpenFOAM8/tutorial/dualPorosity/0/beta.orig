/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    object      beta;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

//internalField     uniform 1e0;

 internalField  #codeStream
     {
         codeInclude
         #{
             #include "fvCFD.H"
         #};

         codeOptions
         #{
             -I$(LIB_SRC)/finiteVolume/lnInclude \
             -I$(LIB_SRC)/meshTools/lnInclude
         #};

         codeLibs
         #{
             -lmeshTools \
             -lfiniteVolume
         #};

         code
         #{
             const IOdictionary& d = static_cast<const IOdictionary&>(dict);
             const fvMesh& mesh = refCast<const fvMesh>(d.db());
             scalarField fld
             (
               Foam::pow
               (
                 10,
                 2
                 *
                 Foam::sin(scalar(4.)*constant::mathematical::pi*mesh.C().component(0)->primitiveField())
                 *
                 Foam::sin(scalar(4.)*constant::mathematical::pi*mesh.C().component(1)->primitiveField())
               )
             );
             writeEntry(os,"",fld);
         #};

     };

boundaryField
{
    "left|right|top|bottom"
    {
        type            zeroGradient;
    }

    frontAndBack
    {
        type            empty;
    }
}

// ************************************************************************* //
